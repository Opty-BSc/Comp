#ifndef _MINOR_H_
#define _MINOR_H_

#define _ARRAY 0
#define _INT 1
#define _STR 2
#define _VOID 3
#define _CONST 4
#define _PUBLIC 8
#define _FORWARD 16
#define _FUNCTION 24

#define isArray(p) (NAKED_TYPE(INFO(p)) == 0)
#define isInt(p) (NAKED_TYPE(INFO(p)) == 1)
#define isStr(p) (NAKED_TYPE(INFO(p)) == 2)
#define isVoid(p) (NAKED_TYPE(INFO(p)) == 3)

#define isConst(a) ((a % 8) > 3)
#define isForw(a) ((a % 24) > 15)
#define isPubl(a) ((a % 24) > 7 && !isForw(a))
#define isFunc(a) (a > 23)

#define NAKED_TYPE(a) (a % 4)
#define isNull(p) (OP_LABEL(p) == INT && p->value.i == 0)
#define SAME_TYPE(a, p) (NAKED_TYPE(a) == NAKED_TYPE(INFO(p)) || isNull(p))

#include "postfix.h"
#define INT_SZ 4
#define CH_SZ 1
#define PTR_SZ pfWORD
#define typeBytes(a) (NAKED_TYPE(a) == 1 ? INT_SZ : PTR_SZ)
#define eleBytes(a) (NAKED_TYPE(a) == 2 ? CH_SZ : INT_SZ)
#define assArithBytes(a) (NAKED_TYPE(a) == 0 ? INT_SZ : 1)
#define UC(c) ((unsigned char)c)

#endif /* _MINOR_H_ */

/* Type Guide
0 ARRAY
1 INT
2 STR
3 VOID
4 CONST ARRAY
5 CONST INT
6 CONST STR
7 CONST VOID
8 PUBLIC ARRAY
9 PUBLIC INT
10 PUBLIC STR
11 PUBLIC VOID
12 PUBLIC CONST ARRAY
13 PUBLIC CONST INT
14 PUBLIC CONST STR
15 PUBLIC CONST VOID
16 FORWARD ARRAY
17 FORWARD INT
18 FORWARD STR
19 FORWARD VOID
20 FORWARD CONST ARRAY
21 FORWARD CONST INT
22 FORWARD CONST STR
23 FORWARD CONST VOID
24 FUNCTION ARRAY
25 FUNCTION INT
26 FUNCTION STR
27 FUNCTION VOID
28 FUNCTION CONST ARRAY
29 FUNCTION CONST INT
30 FUNCTION CONST STR
31 FUNCTION CONST VOID
32 FUNCTION PUBLIC ARRAY
33 FUNCTION PUBLIC INT
34 FUNCTION PUBLIC STR
35 FUNCTION PUBLIC VOID
36 FUNCTION PUBLIC CONST ARRAY
37 FUNCTION PUBLIC CONST INT
38 FUNCTION PUBLIC CONST STR
39 FUNCTION PUBLIC CONST VOID
40 FUNCTION FORWARD ARRAY
41 FUNCTION FORWARD INT
42 FUNCTION FORWARD STR
43 FUNCTION FORWARD VOID
44 FUNCTION FORWARD CONST ARRAY
45 FUNCTION FORWARD CONST INT
46 FUNCTION FORWARD CONST STR
47 FUNCTION FORWARD CONST VOID
*/
